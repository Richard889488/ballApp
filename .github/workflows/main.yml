name: Flet CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出仓库代码
      - name: 检出仓库
        uses: actions/checkout@v3

      # 2. 设置 Python 环境
      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 根据需要更改 Python 版本

      # 3. 安装系统依赖项
      - name: 安装系统依赖项
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libglib2.0-0

      # 4. 缓存 pip 依赖项
      - name: 缓存 pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 5. 安装 Python 依赖项
      - name: 安装依赖项
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 6. 运行单元测试（如果有）
      # - name: 运行单元测试
      #   run: |
      #     pytest
        # 如果没有测试，可以注释掉或删除此步骤

      # 7. 构建 APK（如果需要，参考前面的步骤）
      # - name: 构建 Flutter WebView 应用
      #   uses: subosito/flutter-action@v2
      #   with:
      #     channel: stable
      #     flutter-version: '3.13.6'  # 根据需要更改 Flutter 版本
      #     architecture: 'x64'
      #     cache: true

      - name: 构建 Android APK
        run: |
          # cd flutter_webview_app   替换为您的 Flutter 项目目录
          flutter build apk

      # 8. 上传生成的 APK（如果需要）
      - name: 上传 APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: flutter_webview_app/build/app/outputs/flutter-apk/app-release.apk  # 根据实际路径调整
